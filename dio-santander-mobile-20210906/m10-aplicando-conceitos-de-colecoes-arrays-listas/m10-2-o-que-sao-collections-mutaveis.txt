O que são colletions mutáveis
- Utilizaremos as colletions mutáveis da API Mutable Colections

Conceitos iniciais
- Criar arquivo TesteColecoesMutaveis.kt

Desenvolvimento com mutableListOf
- mutableListOf
- .add()
- .remove()
- mutableSetOf , .add
Um dos quesitos de Set é não ter objetos repetidos, devido ao "Icos?" e HashCode forte no código.
- mutableSetOf , .remove

Desenvolvimento com mutableMapOf - Parte 1
- Criar novo arquivo "Repositorio.kt" (para simular um banco de dados)
- inserir a classe Repositorio e um map = mutableMapOf
-	map.put(id, value)
	map[id] = value

Verficar as expressões abaixo sugeridas pela IDE	
	with(map) { put(id, value) }
	map.run { put(id, value) }
        this.map.run { put(id, value) }

Desenvolvimento com mutableMapOf - Parte 2
- inserir no Repositorio.kt 
	findAll()
- findAll com forEach
- remove

Introdução a Extensions Functions
- Permitir criar funcoes para uma classe específica sem precisar herdar, "Decorator pattern?" etc.
- criar arquivo BigDecimal.kt
	acrescentar	import java.math.BigDecimal

- fun Array<BigDecimal>.somatoria() = this.reduce {
        acc, valor -> acc * valor

Em lambda: fun Array<BigDecimal>.somatoria() = this.reduce { acc, valor -> acc * valor }

- fun Array<BigDecimal>.media() =
    if(this.isEmpty()) BigDecimal.ZERO
    else this.somatoria() / this.size.toBigDecimal()

- as funções somatoria() e media() são funções extendidas e não existem no tipo Array

Prática com Extensions Functions
- renomear arquivo BigDecimal.kt para FuncoesEstendidas.kt
- Teste com as funções acima

Conclusão do curso
-

Certifique seu conhecimento